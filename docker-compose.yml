services:
  postgres:
    image: postgres:15-alpine
    environment:
      POSTGRES_DB: deliverydb
      POSTGRES_USER: delivery
      POSTGRES_PASSWORD: delivery
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U delivery -d deliverydb"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 3s
      retries: 20
    restart: unless-stopped

  keycloak:
    image: quay.io/keycloak/keycloak:24.0.5
    command:
      - start-dev
      - --import-realm
      - --hostname=keycloak
      - --hostname-port=8080
      - --hostname-strict=false
      - --hostname-strict-https=false
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_HTTP_PORT: 8080
      KC_DB: dev-file
    ports:
      - "8081:8080"
    volumes:
      - ./keycloak/realm-export.json:/opt/keycloak/data/import/realm-export.json:ro
    restart: unless-stopped

  app:
    image: gradle:8.8-jdk17
    working_dir: /workspace
    command: ["sh","-lc","gradle --no-daemon bootRun --args='--spring.profiles.active=docker'"]
    volumes:
      - ./:/workspace
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_REDIS_HOST: redis
      SPRING_REDIS_PORT: "6379"
      SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_ISSUER_URI: http://keycloak:8080/realms/delivery-realm
      GRADLE_OPTS: -Xmx768m
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      keycloak:
        condition: service_started
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  pgdata:
